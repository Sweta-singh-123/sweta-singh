{"ast":null,"code":"// useIntersectionObserver.js\nexport const observeIntersection = (elementRefs, options = {\n  threshold: 0.0000001\n}) => {\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('show');\n      }\n    });\n  }, options);\n  elementRefs.forEach(ref => {\n    if (ref.current) observer.observe(ref.current);\n  });\n  return () => {\n    elementRefs.forEach(ref => {\n      if (ref.current) observer.unobserve(ref.current);\n    });\n  };\n};","map":{"version":3,"names":["observeIntersection","elementRefs","options","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","ref","current","observe","unobserve"],"sources":["C:/Users/DELL/OneDrive/Desktop/Sweta-Singh/src/utility/userInterfaceObserver.js"],"sourcesContent":["// useIntersectionObserver.js\r\nexport const observeIntersection = (elementRefs, options = { threshold: 0.0000001 }) => {\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('show');\r\n            }\r\n        });\r\n    }, options);\r\n\r\n    elementRefs.forEach(ref => {\r\n        if (ref.current) observer.observe(ref.current);\r\n    });\r\n\r\n    return () => {\r\n        elementRefs.forEach(ref => {\r\n            if (ref.current) observer.unobserve(ref.current);\r\n        });\r\n    };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,mBAAmB,GAAGA,CAACC,WAAW,EAAEC,OAAO,GAAG;EAAEC,SAAS,EAAE;AAAU,CAAC,KAAK;EACpF,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;IACnDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;MACvB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACtBD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACtC;IACJ,CAAC,CAAC;EACN,CAAC,EAAEV,OAAO,CAAC;EAEXD,WAAW,CAACM,OAAO,CAACM,GAAG,IAAI;IACvB,IAAIA,GAAG,CAACC,OAAO,EAAEV,QAAQ,CAACW,OAAO,CAACF,GAAG,CAACC,OAAO,CAAC;EAClD,CAAC,CAAC;EAEF,OAAO,MAAM;IACTb,WAAW,CAACM,OAAO,CAACM,GAAG,IAAI;MACvB,IAAIA,GAAG,CAACC,OAAO,EAAEV,QAAQ,CAACY,SAAS,CAACH,GAAG,CAACC,OAAO,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}